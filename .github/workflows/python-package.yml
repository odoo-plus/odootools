# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        odoo-version: ["13", "14", "15", "16"]
        exclude:
          - odoo-version: "14"
            python-version: "3.10"
          - odoo-version: "13"
            python-version: "3.10"

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install postgres client
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3-dev postgresql-client libldap2-dev libsasl2-dev python3-psycopg2 python3-wheel python3-gevent
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest codecov
        python -m pip install -e ".[test]"
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGPORT: 5432
      run: |
        TEST_ODOO=${{ matrix.odoo-version }} pytest --cov=./ --cov-config=./setup.cfg -v
        codecov

    - name: Install Odoo
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGPORT: 5432
      run: |
        odootools manage setup ${{ matrix.odoo-version }}.0

    - name: Initialize Database
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGPORT: 5432
      run: |
        odootools --log-level INFO db init --country CA -m sale -m stock test${{ matrix.odoo-version }}
        odootools --log-level INFO db list

    - name: Remove stock module
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGPORT: 5432
      run: |
        odootools --log-level INFO manage uninstall -m stock test${{ matrix.odoo-version }}
